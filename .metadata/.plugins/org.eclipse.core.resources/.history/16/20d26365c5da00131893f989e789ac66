/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package src.scoringsystem.fabio;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * 
 * @author Fabio
 */
public class Admin extends javax.swing.JFrame
{
	
	/**
	 * 
	 */
    private static final long serialVersionUID = 1L;
	/**
	 * Creates new form Admin
	 */
	DB db;
	ResultSet rs;
	boolean connected = false;
	boolean deleting = false;
	boolean editing = false;
	boolean yesOrNo = false;
	String[] users;
	
	public Admin()
	{
		initComponents();
		CreateNewUser.setVisible(false);
		EditUser.setVisible(false);
		CreateNewUser.pack();
		EditUser.pack();
	}
	
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents()
	{
		
		CreateNewUser = new javax.swing.JDialog();
		lblName = new javax.swing.JLabel();
		lblPassword = new javax.swing.JLabel();
		lblRptPassword = new javax.swing.JLabel();
		lblInfo = new javax.swing.JLabel();
		txfName = new javax.swing.JTextField();
		txpPassword = new javax.swing.JPasswordField();
		txpRptPassword = new javax.swing.JPasswordField();
		btnCreate = new javax.swing.JButton();
		btnBack = new javax.swing.JButton();
		EditUser = new javax.swing.JDialog();
		lblName1 = new javax.swing.JLabel();
		lblPassword1 = new javax.swing.JLabel();
		lblRptPassword1 = new javax.swing.JLabel();
		lblInfo1 = new javax.swing.JLabel();
		txfName1 = new javax.swing.JTextField();
		txpPassword1 = new javax.swing.JPasswordField();
		txpRptPassword1 = new javax.swing.JPasswordField();
		btnEdit = new javax.swing.JButton();
		btnBack1 = new javax.swing.JButton();
		lblOldUsername = new javax.swing.JLabel();
		txfOldUsername = new javax.swing.JLabel();
		lblResponse = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		txaMain = new javax.swing.JList();
		mnuBar = new javax.swing.JMenuBar();
		mnuFile = new javax.swing.JMenu();
		mnuItemLogin = new javax.swing.JMenuItem();
		mnuItemExport = new javax.swing.JMenuItem();
		mnuItemSettings = new javax.swing.JMenuItem();
		mnuItemClose = new javax.swing.JMenuItem();
		mnuEdit = new javax.swing.JMenu();
		mnuItemCreate = new javax.swing.JMenuItem();
		mnuItemDelete = new javax.swing.JMenuItem();
		mnuItemEdit = new javax.swing.JMenuItem();
		mnuView = new javax.swing.JMenu();
		mnuItemViewAll = new javax.swing.JMenuItem();
		
		CreateNewUser.setMaximumSize(null);
		CreateNewUser.setMinimumSize(null);
		
		lblName.setText("Userame:");
		
		lblPassword.setText("Password:");
		
		lblRptPassword.setText("Repeat Password:");
		
		lblInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		
		btnCreate.setText("Create");
		btnCreate.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				btnCreateActionPerformed(evt);
			}
		});
		
		btnBack.setText("Back");
		btnBack.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				btnBackActionPerformed(evt);
			}
		});
		
		javax.swing.GroupLayout CreateNewUserLayout = new javax.swing.GroupLayout(CreateNewUser.getContentPane());
		CreateNewUser.getContentPane().setLayout(CreateNewUserLayout);
		CreateNewUserLayout.setHorizontalGroup(CreateNewUserLayout
		        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		        .addComponent(lblInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		        .addGroup(
		                CreateNewUserLayout
		                        .createSequentialGroup()
		                        .addContainerGap()
		                        .addGroup(
		                                CreateNewUserLayout
		                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
		                                        .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                                Short.MAX_VALUE)
		                                        .addComponent(lblRptPassword, javax.swing.GroupLayout.Alignment.LEADING,
		                                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                        .addComponent(lblPassword, javax.swing.GroupLayout.Alignment.LEADING,
		                                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                        .addComponent(btnCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                                Short.MAX_VALUE))
		                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
		                        .addGroup(
		                                CreateNewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
		                                        .addComponent(txpPassword).addComponent(txpRptPassword)
		                                        .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
		                                        .addComponent(txfName)).addContainerGap()));
		CreateNewUserLayout.setVerticalGroup(CreateNewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
		        CreateNewUserLayout
		                .createSequentialGroup()
		                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                .addGroup(
		                        CreateNewUserLayout
		                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
		                                .addComponent(txfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		                .addGroup(
		                        CreateNewUserLayout
		                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                                .addComponent(lblPassword)
		                                .addComponent(txpPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		                .addGroup(
		                        CreateNewUserLayout
		                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                                .addComponent(lblRptPassword)
		                                .addComponent(txpRptPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addGap(9, 9, 9)
		                .addGroup(
		                        CreateNewUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnCreate)
		                                .addComponent(btnBack)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		                .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)));
		
		CreateNewUser.getAccessibleContext().setAccessibleParent(mnuBar);
		
		EditUser.setMinimumSize(null);
		
		lblName1.setText("New Userame:");
		
		lblPassword1.setText("New Password:");
		
		lblRptPassword1.setText("Repeat Password:");
		
		lblInfo1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		
		btnEdit.setText("Edit");
		btnEdit.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				btnEditActionPerformed(evt);
			}
		});
		
		btnBack1.setText("Back");
		btnBack1.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				btnBack1ActionPerformed(evt);
			}
		});
		
		lblOldUsername.setText("Old Username:");
		
		txfOldUsername.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
		
		javax.swing.GroupLayout EditUserLayout = new javax.swing.GroupLayout(EditUser.getContentPane());
		EditUser.getContentPane().setLayout(EditUserLayout);
		EditUserLayout.setHorizontalGroup(EditUserLayout
		        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
		        .addComponent(lblInfo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		        .addGroup(
		                EditUserLayout
		                        .createSequentialGroup()
		                        .addContainerGap()
		                        .addGroup(
		                                EditUserLayout
		                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
		                                        .addComponent(lblRptPassword1, javax.swing.GroupLayout.Alignment.LEADING,
		                                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                        .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                                Short.MAX_VALUE)
		                                        .addComponent(lblPassword1, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                                        .addComponent(lblName1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                                Short.MAX_VALUE)
		                                        .addComponent(lblOldUsername, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
		                        .addGroup(
		                                EditUserLayout
		                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
		                                        .addComponent(txpPassword1)
		                                        .addComponent(txpRptPassword1)
		                                        .addComponent(btnBack1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
		                                        .addComponent(txfName1)
		                                        .addComponent(txfOldUsername, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));
		EditUserLayout.setVerticalGroup(EditUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
		        EditUserLayout
		                .createSequentialGroup()
		                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
		                .addGroup(
		                        EditUserLayout
		                                .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
		                                .addComponent(lblOldUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        Short.MAX_VALUE)
		                                .addComponent(txfOldUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        Short.MAX_VALUE))
		                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
		                .addGroup(
		                        EditUserLayout
		                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                                .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
		                                .addComponent(txfName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		                .addGroup(
		                        EditUserLayout
		                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                                .addComponent(lblPassword1)
		                                .addComponent(txpPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		                .addGroup(
		                        EditUserLayout
		                                .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
		                                .addComponent(lblRptPassword1)
		                                .addComponent(txpRptPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
		                                        javax.swing.GroupLayout.PREFERRED_SIZE))
		                .addGap(9, 9, 9)
		                .addGroup(
		                        EditUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnEdit)
		                                .addComponent(btnBack1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
		                .addComponent(lblInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)));
		
		setResizable(false);
		// getContentPane().setLayout(new
		// org.netbeans.lib.awtextra.AbsoluteLayout());
		
		lblResponse.setBorder(javax.swing.BorderFactory.createEtchedBorder());
		// getContentPane().add(lblResponse, new
		// org.netbeans.lib.awtextra.AbsoluteConstraints(0, 240, 340, 20));
		
		txaMain.addKeyListener(new java.awt.event.KeyAdapter()
		{
			public void keyPressed(java.awt.event.KeyEvent evt)
			{
				txaMainKeyPressed(evt);
			}
		});
		jScrollPane2.setViewportView(txaMain);
		
		// getContentPane().add(jScrollPane2, new
		// org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 320, 210));
		
		mnuFile.setText("File");
		
		mnuItemLogin.setText("Login");
		mnuItemLogin.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				mnuItemLoginActionPerformed(evt);
			}
		});
		mnuFile.add(mnuItemLogin);
		
		mnuItemExport.setText("Export Database to textfile");
		mnuFile.add(mnuItemExport);
		
		mnuItemSettings.setText("Settings");
		mnuFile.add(mnuItemSettings);
		
		mnuItemClose.setText("Close");
		mnuItemClose.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				mnuItemCloseActionPerformed(evt);
			}
		});
		mnuFile.add(mnuItemClose);
		
		mnuBar.add(mnuFile);
		
		mnuEdit.setText("Edit");
		
		mnuItemCreate.setText("Create New User");
		mnuItemCreate.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				mnuItemCreateActionPerformed(evt);
			}
		});
		mnuEdit.add(mnuItemCreate);
		
		mnuItemDelete.setText("Delete User");
		mnuItemDelete.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				mnuItemDeleteActionPerformed(evt);
			}
		});
		mnuEdit.add(mnuItemDelete);
		
		mnuItemEdit.setText("Edit User");
		mnuItemEdit.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				mnuItemEditActionPerformed(evt);
			}
		});
		mnuEdit.add(mnuItemEdit);
		
		mnuBar.add(mnuEdit);
		
		mnuView.setText("View");
		
		mnuItemViewAll.setText("View all Users");
		mnuItemViewAll.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				mnuItemViewAllActionPerformed(evt);
			}
		});
		mnuView.add(mnuItemViewAll);
		
		mnuBar.add(mnuView);
		
		setJMenuBar(mnuBar);
		
		getAccessibleContext().setAccessibleParent(CreateNewUser);
		
		pack();
	}// </editor-fold>//GEN-END:initComponents
	
	private void mnuItemEditActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_mnuItemEditActionPerformed
		editing = true;
		deleting = false;
		lblResponse.setText("Editing...");
		if (connected)
		{
			ArrayList<String> temp = new ArrayList<String>();
			try
			{
				rs = db.query("select * from tblUsers");
				while (rs.next())
				{
					temp.add("Username: " + rs.getString("name") + " Password: " + rs.getString("password"));
					users = createArray(temp);
					txaMain.setListData(users);
				}
			}
			catch (SQLException ex)
			{
				System.out.println(ex);
				lblResponse.setText("" + ex);
			}
		}
		else
		{
			lblResponse.setText("Not Connected");
		}
	}// GEN-LAST:event_mnuItemEditActionPerformed
	
	private void mnuItemLoginActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_mnuItemLoginActionPerformed
		db = new DB("root", "nbuser");
		lblResponse.setText(db.toString());
		if (db.toString().equals("Connection Successful"))
		{
			connected = true;
		}
		else
		{
			connected = false;
		}
	}// GEN-LAST:event_mnuItemLoginActionPerformed
	
	private void mnuItemViewAllActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_mnuItemViewAllActionPerformed
		if (connected)
		{
			ArrayList<String> temp = new ArrayList<String>();
			try
			{
				rs = db.query("select * from tblUsers");
				while (rs.next())
				{
					temp.add("Username: " + rs.getString("name") + " Password: " + rs.getString("password"));
					users = createArray(temp);
					txaMain.setListData(users);
					lblResponse.setText("");
				}
				lblResponse.setText("");
			}
			catch (SQLException ex)
			{
				System.out.println(ex);
				lblResponse.setText("" + ex);
			}
			
		}
		else
		{
			lblResponse.setText("Not Connected");
		}
	}// GEN-LAST:event_mnuItemViewAllActionPerformed
	
	private String[] createArray(ArrayList<String> arrList)
	{
		int size = arrList.size();
		String[] temp = new String[size];
		for (int i = 0; i < size; i++)
		{
			temp[i] = arrList.get(i);
		}
		return temp;
	}
	
	private void mnuItemCreateActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_mnuItemCreateActionPerformed
	
		if (connected)
		{
			lblResponse.setText("Creating user...");
			deleting = false;
			editing = false;
			CreateNewUser.setVisible(true);
		}
		else
		{
			lblResponse.setText("Not Connected");
		}
		
	}// GEN-LAST:event_mnuItemCreateActionPerformed
	
	private void btnBackActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_btnBackActionPerformed
		CreateNewUser.setVisible(false);
	}// GEN-LAST:event_btnBackActionPerformed
	
	private void btnCreateActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_btnCreateActionPerformed
		if (connected)
		{
			String username = txfName.getText();
			String pass1 = txpPassword.getText();
			String pass2 = txpRptPassword.getText();
			if (!pass1.equals(pass2))
			{
				lblInfo.setText("Passwords don't match");
				txpPassword.setText("");
				txpRptPassword.setText("");
			}
			else
			{
				if (registerClient(username, pass1))
				{
					lblInfo.setText("Registration Successful");
					lblResponse.setText("");
					txfName.setText("");
					txpPassword.setText("");
					txpRptPassword.setText("");
					CreateNewUser.setVisible(false);
				}
				else
				{
					lblInfo.setText("Registration unsuccessful");
					txfName.setText("");
					txpPassword.setText("");
					txpRptPassword.setText("");
				}
				
			}
		}
		else
		{
			lblInfo.setText("Not Connected");
		}
	}// GEN-LAST:event_btnCreateActionPerformed
	
	private void txaMainKeyPressed(java.awt.event.KeyEvent evt)
	{// GEN-FIRST:event_txaMainKeyPressed
		if (deleting)
		{
			if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_DELETE)
			{
				try
				{
					int selected = txaMain.getSelectedIndex();
					String user = users[selected];
					String username = user.substring(10, user.lastIndexOf('P') - 1);
					db.update("DELETE FROM `users`.`tblusers` WHERE `name`='" + username + "';");
					lblResponse.setText("Deletion successful");
					deleting = false;
				}
				catch (SQLException ex)
				{
					lblResponse.setText("" + ex);
				}
			}
		}
		else if (editing)
		{
			if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER)
			{
				int selected = txaMain.getSelectedIndex();
				String user = users[selected];
				String username = user.substring(10, user.lastIndexOf('P') - 1);
				txfOldUsername.setText(username);
				EditUser.setVisible(true);
			}
			
		}
	}// GEN-LAST:event_txaMainKeyPressed
	
	private void mnuItemDeleteActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_mnuItemDeleteActionPerformed
		deleting = true;
		editing = false;
		lblResponse.setText("Deleting...");
		if (connected)
		{
			ArrayList<String> temp = new ArrayList<String>();
			try
			{
				rs = db.query("select * from tblUsers");
				while (rs.next())
				{
					temp.add("Username: " + rs.getString("name") + " Password: " + rs.getString("password"));
					users = createArray(temp);
					txaMain.setListData(users);
				}
			}
			catch (SQLException ex)
			{
				System.out.println(ex);
				lblResponse.setText("" + ex);
			}
			
		}
		else
		{
			lblResponse.setText("Not Connected");
		}
	}// GEN-LAST:event_mnuItemDeleteActionPerformed
	
	private void btnEditActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_btnEditActionPerformed
		if (connected)
		{
			String username = txfName1.getText();
			String pass1 = txpPassword1.getText();
			String pass2 = txpRptPassword1.getText();
			if (!pass1.equals(pass2))
			{
				lblInfo1.setText("Passwords don't match");
				txpPassword1.setText("");
				txpRptPassword1.setText("");
			}
			else
			{
				if (editClient(txfOldUsername.getText(), username, pass1))
				{
					lblInfo1.setText("Edit Successful");
					txfName1.setText("");
					txpPassword1.setText("");
					txpRptPassword1.setText("");
					CreateNewUser.setVisible(false);
				}
				else
				{
					lblInfo1.setText("Edit unsuccessful");
					txfName1.setText("");
					txpPassword1.setText("");
					txpRptPassword1.setText("");
				}
				
			}
		}
		else
		{
			lblInfo1.setText("Not Connected");
		}
		
	}// GEN-LAST:event_btnEditActionPerformed
	
	private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_btnBack1ActionPerformed
		EditUser.setVisible(false);
	}// GEN-LAST:event_btnBack1ActionPerformed
	
	private void mnuItemCloseActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_mnuItemCloseActionPerformed
		this.setVisible(false);
	}// GEN-LAST:event_mnuItemCloseActionPerformed
	
	public boolean registerClient(String username, String password)
	{
		try
		{
			db.update("INSERT INTO tblUsers (`name`, `password`) VALUES ('" + username + "', '" + password + "');");
		}
		catch (SQLException ex)
		{
			System.out.println(ex);
			return false;
		}
		return true;
	}
	
	public boolean editClient(String username, String newUsername, String newPassword)
	{
		try
		{
			db.update("UPDATE `users`.`tblusers` SET `name`='" + newUsername + "', `password`='" + newPassword + "' WHERE `name`='" + username + "';");
		}
		catch (SQLException ex)
		{
			System.out.println(ex);
			return false;
		}
		return true;
	}
	
	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[])
	{
		/*
		 * Set the Nimbus look and feel
		 */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try
		{
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
			{
				if ("Nimbus".equals(info.getName()))
				{
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		}
		catch (ClassNotFoundException ex)
		{
			java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (InstantiationException ex)
		{
			java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (IllegalAccessException ex)
		{
			java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		catch (javax.swing.UnsupportedLookAndFeelException ex)
		{
			java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		
		/*
		 * Create and display the form
		 */
		java.awt.EventQueue.invokeLater(new Runnable()
		{
			
			public void run()
			{
				new Admin().setVisible(true);
			}
		});
	}
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JDialog CreateNewUser;
	private javax.swing.JDialog EditUser;
	private javax.swing.JButton btnBack;
	private javax.swing.JButton btnBack1;
	private javax.swing.JButton btnCreate;
	private javax.swing.JButton btnEdit;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JLabel lblInfo;
	private javax.swing.JLabel lblInfo1;
	private javax.swing.JLabel lblName;
	private javax.swing.JLabel lblName1;
	private javax.swing.JLabel lblOldUsername;
	private javax.swing.JLabel lblPassword;
	private javax.swing.JLabel lblPassword1;
	private javax.swing.JLabel lblResponse;
	private javax.swing.JLabel lblRptPassword;
	private javax.swing.JLabel lblRptPassword1;
	private javax.swing.JMenuBar mnuBar;
	private javax.swing.JMenu mnuEdit;
	private javax.swing.JMenu mnuFile;
	private javax.swing.JMenuItem mnuItemClose;
	private javax.swing.JMenuItem mnuItemCreate;
	private javax.swing.JMenuItem mnuItemDelete;
	private javax.swing.JMenuItem mnuItemEdit;
	private javax.swing.JMenuItem mnuItemExport;
	private javax.swing.JMenuItem mnuItemLogin;
	private javax.swing.JMenuItem mnuItemSettings;
	private javax.swing.JMenuItem mnuItemViewAll;
	private javax.swing.JMenu mnuView;
	private javax.swing.JList txaMain;
	private javax.swing.JTextField txfName;
	private javax.swing.JTextField txfName1;
	private javax.swing.JLabel txfOldUsername;
	private javax.swing.JPasswordField txpPassword;
	private javax.swing.JPasswordField txpPassword1;
	private javax.swing.JPasswordField txpRptPassword;
	private javax.swing.JPasswordField txpRptPassword1;
	// End of variables declaration//GEN-END:variables
	// private void setAutoRequestFocus(boolean b) {
	// }
}
